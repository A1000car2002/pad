Inicio [label = 'Inicio']
Simplificar [label = 'Simplificar fracción']
PropiaImpropia [label = '¿Fracción propia o impropia?']
DivisionPolinomica [label = 'Realizar división polinómica']
Factorizar [label = '¿Se puede factorizar el denominador?']
AsignarFracciones [label = 'Asignar fracciones parciales']
Coeficientes [label = 'Determinar coeficientes']
Integrar [label = 'Integrar cada fracción parcial']
Sumar [label = 'Sumar las integrales']
Fin [label = 'Fin']
# Definir las conexiones
Inicio -> Simplificar
Simplificar -> PropiaImpropia
PropiaImpropia -> Factorizar [label = 'Propia']
PropiaImpropia -> DivisionPolinomica [label = 'Impropia']
DivisionPolinomica -> Factorizar
Factorizar -> AsignarFracciones [label = 'Sí']
Factorizar -> Fin [label = 'No']
AsignarFracciones -> Coeficientes
Coeficientes -> Integrar
Integrar -> Sumar
Sumar -> Fin
}
")
# Crear el flujograma
grViz("
digraph flowchart {
# Definir las direcciones de las flechas
graph [rankdir = TB]
# Definir los nodos
node [shape = box, style = filled, color = lightblue, fontname = Helvetica, fontsize = 12]
Inicio [label = 'DESCOMPOSICION EN FRACCIONES ']
Simplificar [label = 'Simplificar fracción']
PropiaImpropia [label = '¿Fracción propia o impropia?']
DivisionPolinomica [label = 'Realizar división polinómica']
Factorizar [label = '¿Se puede factorizar el denominador?']
AsignarFracciones [label = 'Asignar fracciones parciales']
Coeficientes [label = 'Determinar coeficientes']
Integrar [label = 'Integrar cada fracción parcial']
Sumar [label = 'Sumar las integrales']
Fin [label = 'Fin']
# Definir las conexiones
Inicio -> Simplificar
Simplificar -> PropiaImpropia
PropiaImpropia -> Factorizar [label = 'Propia']
PropiaImpropia -> DivisionPolinomica [label = 'Impropia']
DivisionPolinomica -> Factorizar
Factorizar -> AsignarFracciones [label = 'Sí']
Factorizar -> Fin [label = 'No']
AsignarFracciones -> Coeficientes
Coeficientes -> Integrar
Integrar -> Sumar
Sumar -> Fin
}
")
bookdown:::mathquill()
install.packages("Ime4")
View(LA_MOLINA_2014_POTATO_WUE_FB_)
head(datos)
library(readxl)
LA_MOLINA_2014_POTATO_WUE_FB_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB).xlsx",
sheet = "fb")
View(LA_MOLINA_2014_POTATO_WUE_FB_)
library(readxl)
LA_MOLINA_2014_POTATO_WUE_FB_ <- read_excel("LA MOLINA 2014 POTATO WUE (FB).xlsx",
sheet = "fb")
View(LA_MOLINA_2014_POTATO_WUE_FB_)
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
modelo <- aov(formula = block + lfa ~ riego + geno + riego*geno
, data =fb)
anova(modelo)
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
str(fb)
modelo <- aov(formula = block + lfa ~ riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
modelo <- aov(formula = bloque + lfa ~ riego + geno + riego*geno
, data =fb)
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot((fb, aes(x = geno, y = lfa, colour = riego)) +
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
, data =fb)
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
str(fb)
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "red", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
library(lme4)
model <- lme4::lmr(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
library(lme4)
model <- lme4::lmer(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(modelo)
plot(modelo)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(modelo)
plot(modelo)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
plot(modelo)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
plot(model)
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
plot(model)
library(inti)
model <- remove_outliers(data = fb
,formula = lfa ~ riego + geno + riego * geno+ (1 | bloque)
, plot_diag = T
)
model
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
plot(model)
ol <- boxplot(lfa ~ riego * geno, fb)
ol
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
str(fb)
library(inti)
model <- remove_outliers(data = fb
,formula = lfa ~ riego + geno + riego * geno+ (1 | bloque)
, plot_diag = T
)
model
load("D:/Ingeniería Agrónoma/Cursos/Ciclo XII/Programación y Analisis De Datos/Rproject/.RData")
k
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "green", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
str(fb)
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
str(fb)
fb <- gs %>%
range_read("fb")
str(fb)
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
source('https://inkaverse.com/setup.r')
model <- lme4::lmer(formula = hi ~ riego + geno + riego * geno + (1 | bloque), data = fb)
source('https://inkaverse.com/setup.r')
url <- "https://docs.google.com/spreadsheets/d/15r7ZwcZZHbEgltlF6gSFvCTFA-CFzVBWwg3mFlRyKPs/edit?gid=172957346#gid=172957346"
gs <- url %>%
as_sheets_id()
fb <- gs %>%
range_read("fb")
str(fb)
modelo <- aov(formula = lfa ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = lfa, colour = riego)) +
geom_boxplot(outlier.colour = "green", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
modelo <- aov(formula = hi ~ bloque + riego + geno + riego*geno
, data =fb)
anova(modelo)
plot(modelo)
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
ggplot(fb, aes(x = geno, y = hi, colour = riego)) +
geom_boxplot(outlier.colour = "blue", outlier.shape = 16, outlier.size = 2) +
labs(title = "Boxplot con interacción de niveles de riego y genotipo",
x = "Interacción riego y genotipo",
y = "Área foliar (cm^2)")
theme_minimal() +
theme(axis.text.x = element_text(angle = 45,hjust = 1))
library(lme4)
model <- lme4::lmer(formula = lfa ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
plot(model)
ol <- boxplot(lfa ~ riego * geno, fb)
ol
library(inti)
model <- remove_outliers(data = fb
,formula = lfa ~ riego + geno + riego * geno+ (1 | bloque)
, plot_diag = T
)
model
modelo <- lm(formula = lfa ~ bloque + riego + geno + riego * geno, data = fb)
anova(modelo)
library(agricolae)
tukey_result <- HSD.test(modelo, c("geno", "riego"), group = TRUE)
print(tukey_result)
plot(tukey_result)
tukey_result
grupos <- tukey_result$groups %>%
rownames_to_column("tratamientos") %>%
separate(tratamientos, into = c("geno", "riego"), sep = ":")
str(grupos)
# Cargar las bibliotecas necesarias
library(agricolae)
library(ggplot2)
library(dplyr)
library(tidyr)
# Ajustar el modelo lineal
modelo <- lm(formula = lfa ~ bloque + riego + geno + riego * geno, data = fb)
# Obtener el resultado de Tukey
tukey_result <- HSD.test(modelo, c("geno", "riego"), group = TRUE)
# Crear un dataframe con los grupos y separar los tratamientos
grupos <- tukey_result$groups %>%
rownames_to_column("tratamientos") %>%
separate(tratamientos, into = c("geno", "riego"), sep = ":")
# Verificar la estructura del dataframe y los nombres de las columnas
str(grupos)
print(colnames(grupos))  # Verificar nombres de columnas
# Crear el gráfico de barras
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +  # Asegúrate de que "LFA" sea el nombre correcto
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
labs(title = "Comparación de Medias - Prueba de Tukey",
x = "Genotipos",
y = "FTL") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Riego")
# Crear el gráfico de barras con letras estadísticas
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +  # Asegúrate de que "lfa" sea el nombre correcto
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
labs(title = "Comparación de Medias - Prueba de Tukey",
x = "Genotipos",
y = "FTL") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Riego") +
geom_text(aes(label = groups, y = lfa + 0.05),  # Usar 'groups' en lugar de 'M'
position = position_dodge(0.9), vjust = 0)  # Ajustar el espaciado de las letras
# Crear el gráfico de barras con letras estadísticas
ggplot(grupos, aes(x = geno, y = lfa, fill = riego)) +  # Asegúrate de que "lfa" sea el nombre correcto
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
labs(title = "Comparación de Medias - Prueba de Tukey",
x = "Genotipos",
y = "FTL") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Riego") +
geom_text(aes(label = groups, y = lfa + 0.05),  # Usar 'groups' en lugar de 'M'
position = position_dodge(0.9), vjust = 0)  # Ajustar el espaciado de las letras
source('https://inkaverse.com/setup.r')
model <- lme4::lmer(formula = hi ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
library(emmeans)
library(multicmp)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
cm1
cm2 <- emmeans(model, ~ riego | geno) %>%
cld(Letters=letters, reversed = T)
cm2
cm3 <- emmeans(model, ~ riego * geno) %>%
cld(Letters=letters, reversed = T)
cm3
# Convertir las medias estimadas a un dataframe
cm1_df <- as.data.frame(cm1)
# Ver el contenido del dataframe para asegurarnos de que tiene las columnas correctas
print(cm1_df)
# Crear el gráfico de barras con los resultados de las medias estimadas de emmeans
ggplot(cm1_df, aes(x = geno, y = emmean, fill = riego)) +  # Cambia "emmean" por la columna de las medias estimadas
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
labs(title = "Comparación de Medias - Medias Estimadas",
x = "Genotipos",
y = "hi") +
theme_minimal() +
theme(legend.title = element_blank()) +
scale_fill_discrete(name = "Riego")
cm1 <- emmeans(modelo, ~ geno | riego) %>%
cld(Letters = letters, reversed = T)
cm1
library(tidyverse)
library(emmeans)
# Convertir las estimaciones de emmeans a un data frame
dtcm <- as.data.frame(cm1) %>%
rename(sig = ".group")
ggplot(cm1_df, aes(x = geno, y = emmean, color = riego, group = riego)) +
geom_line() +
geom_point(size = 3) +
geom_text(aes(label = round(emmean, 2)),
vjust = -0.5, size = 3.5) +
labs(x = "Genotipo", y = "Media marginal ajustada", color = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Medias marginales ajustadas por genotipo y riego")
cm2 <- emmeans(model, ~ riego | geno) %>%
cld(Letters=letters, reversed = T)
cm2
library(tidyverse)
library(emmeans)
# Convertir las estimaciones de emmeans a un data frame
dtcm <- as.data.frame(cm1) %>%
rename(sig = ".group")
ggplot(cm1_df, aes(x = geno, y = emmean, color = riego, group = riego)) +
geom_line() +
geom_point(size = 3) +
geom_text(aes(label = round(emmean, 2)),
vjust = -0.5, size = 3.5) +
labs(x = "Genotipo", y = "Media marginal ajustada", color = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Medias marginales ajustadas por genotipo y riego")
model <- lme4::lmer(formula = hi ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
library(emmeans)
library(multicmp)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
cm1
cm2 <- emmeans(model, ~ riego | geno) %>%
cld(Letters=letters, reversed = T)
cm2
cm3 <- emmeans(model, ~ riego * geno) %>%
cld(Letters=letters, reversed = T)
cm3
model <- lme4::lmer(formula = hi ~ riego + geno + riego * geno + (1 | bloque), data = fb)
anova(model)
library(emmeans)
library(multicmp)
library(multcompView)
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
cm1
cm2 <- emmeans(model, ~ riego | geno) %>%
cld(Letters=letters, reversed = T)
cm2
cm3 <- emmeans(model, ~ riego * geno) %>%
cld(Letters=letters, reversed = T)
cm3
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters=letters, reversed = T)
cm1
library(tidyverse)
library(emmeans)
# Convertir las estimaciones de emmeans a un data frame
dtcm <- as.data.frame(cm1) %>%
rename(sig = ".group")
ggplot(cm1_df, aes(x = geno, y = emmean, color = riego, group = riego)) +
geom_line() +
geom_point(size = 3) +
geom_text(aes(label = round(emmean, 2)),
vjust = -0.5, size = 3.5) +
labs(x = "Genotipo", y = "Media marginal ajustada", color = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Medias marginales ajustadas por genotipo y riego")
# Cargar las bibliotecas necesarias
library(lme4)
library(emmeans)
library(multcompView)
library(ggplot2)
library(dplyr)
# Ajustar el modelo
model <- lmer(formula = hi ~ riego + geno + riego * geno + (1 | bloque), data = fb)
# Realizar ANOVA
anova(model)
# Obtener las medias estimadas con las letras estadísticas
cm1 <- emmeans(model, ~ geno | riego) %>%
cld(Letters = letters, reversed = TRUE)
# Convertir las estimaciones de emmeans a un data frame
cm1_df <- as.data.frame(cm1) %>%
rename(sig = ".group")  # Renombrar la columna de letras estadísticas
# Crear el gráfico de barras con las letras estadísticas
ggplot(cm1_df, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = position_dodge(), color = "black") +
geom_text(aes(label = sig, y = emmean + 0.1), position = position_dodge(0.9), vjust = -0.5, size = 5) +  # Añadir letras estadísticas
labs(x = "Genotipo", y = "Media marginal ajustada", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Medias marginales ajustadas por genotipo y riego")
dtcm <- as.data.frame(cm2) %>%
rename(sig = ".group")
ggplot(dtcm, aes(x = geno, y = emmean, fill = riego)) +
geom_bar(stat = "identity", position = "dodge", color = "black") +
geom_text(aes(label = sig, y = emmean*1*1),
position = position_dodge(width = 0.9),
vjust = 0) +
labs(x = "Genotipo", y = "HI", fill = "Riego") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Gráfico de barras: LFA por genotipo y riego")
